import pyxel, minigame1, minigame2, minigame3


pyxel.init(128, 128, title="Projet Tri3")

pyxel.load("final_sprites.pyxres", True, True, False, False)



player_x = 64 - 7
player_y = 64 - 19
minigame = 0
def player_mouvement(x, y):
    if pyxel.btn(pyxel.KEY_D):
        if (x < 140):
            x = x + 2
    if pyxel.btn(pyxel.KEY_A):
        if (x > 0):
            x = x - 2
    if pyxel.btn(pyxel.KEY_S):
        if (y < 118):
            y = y + 2
    if pyxel.btn(pyxel.KEY_W):
        if (y > 0):
            y = y - 2
    return x, y

def colision():
    global minigame, player_x, player_y   
    if ( 121 <= player_x + 14 ) and ( 104 <= player_y + 24 ) and ( 121 + 14 >= player_x) and \
       ( 104 + 24 >= player_y):
        minigame = 1
    if ( 25 <= player_x + 14 ) and ( 32 <= player_y + 24 ) and ( 25 + 14 >= player_x) and \
       ( 32 + 24 >= player_y):
        minigame = 2
    if ( 9 <= player_x + 14) and ( 105 <= player_y + 24 ) and ( 9 + 14 >= player_x) and \
       ( 105 + 24 >= player_y):
        minigame = 3

def update():
    global player_x, player_y, minigame
    colision()
    player_x, player_y = player_mouvement(player_x, player_y)
    if minigame == 1:
        minigame = minigame1.update1()
        if minigame == 0:
            player_x = 64 - 7
            player_y = 64 - 19
    if minigame == 2:
        minigame = minigame2.update2()
        if minigame == 0:
            player_x = 64 - 7
            player_y = 64 - 19
    if minigame == 3:
        minigame = minigame3.update3()
        if minigame == 0:
            player_x = 64 - 7
            player_y = 64 - 19

def draw():
    pyxel.cls(0)
    pyxel.bltm(0, 0, 0, 0, 1, 128, 128)
    pyxel.blt(player_x, player_y, 0, 1, 56, 14, 24, 6)
    if minigame == 1:
        minigame1.draw1()
    if minigame == 2:
        minigame2.draw2()
    if minigame == 3:
        minigame3.draw3()
        
pyxel.run(update, draw)
